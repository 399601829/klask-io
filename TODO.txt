- régler le problème du retour navigateur qui ne fonctionne pas
- utiliser une coloration syntaxique en fonction du contenu (Prism ou SyntaxeHighlighter)
- lors du retour de recherche, tout le contenu est envoyé en json, requêtes très lourdes,
il faudrait faire un retour FileDTO qui contient un résumé (à voir coté elasticsearch comment ça marche
- si non connecté, la recherche de fichiers fonctionne, mais pas l'ouverture d'un document
- liste de requêtes prédéfinies (exemple sur date de création de fichier en cohérence avec le SVN : alors range "gte": "01/01/2016")
cela permettrait de récupérer tous les derniers fichiers modifiés sur le SVN

- mettre à jour jhipster quand c'est possible (update)
- faire des liens dans les vues de fichiers

- coloration syntaxique en fonction du fichier (voir http://prismjs.com/plugins/file-highlight/) ou autoload avec highlight.js
- ajouter une détection automatique du charset (actuellement l'indexation dans le CrawlerService est fait en iso-8859-1
et la restitution du FileResource en rest est converti en UTF-8 (l'html rendu par research est en UTF-8)
=> voir http://stackoverflow.com/questions/774075/character-encoding-detection-algorithm

## Highlight
 - réaliser un custom sanitizer comme ici : https://github.com/BYU-ODH/hummedia-client/blob/master/app/js/custom-sanitize.js (source http://stackoverflow.com/questions/16969248/sanitize-custom-whitelist)
 basé sur l'original ici

## Crawler
 - dans le crawler, si le last_modified n'a pas bougé, alors on ne réindexe pas le fichier en question
 - pouvoir parcourir dans le crawler directement le SVN / Git
 - gérer l'accès en JWT à l'api crawler (utiliser le user system ?) voir : https://github.com/Gleetr/auth0-curl/blob/master/curl-auth0

####IDEE A PENSER####
Faire des filtres directement sur les entêtes des colonnes (on pourrait par exemple imaginer que "extension" a un filtre "java" et version a un filtre "branche1"
cela permettra d'éviter d'écrire directement dans le champ de recherche pour les non initiés des requêtes du genre "version:branche1 AND extension:java"


###### intégration continue
 - dans jenkins configurer la tâche "research-release" pour réaliser une image docker (à containeriser)
 - faire un maven release
 - faire un gitpublisher sur la tâche "research-release" pour réaliser un tag Git avec la version releasée
 - publier les versions releasées dans un nexus
